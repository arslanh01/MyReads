{"version":3,"sources":["utils/BooksAPI.js","components/Book.js","components/SearchBooks.js","components/Shelf.js","components/Shelves.js","components/NotFound.js","components/App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","update","book","shelf","fetch","id","method","body","JSON","stringify","then","res","json","search","query","maxResults","data","books","Book","onMove","className","imageLinks","style","width","height","backgroundImage","thumbnail","defaultValue","onChange","event","target","value","disabled","title","authors","map","author","SearchBooks","useState","setQuery","searchResults","setSearchResults","showingResults","searchQuery","e","a","BooksAPI","console","log","error","forEach","searchResult","shelfBook","to","type","placeholder","Shelf","name","Shelves","currentlyReadingBooks","filter","wantToReadBooks","readBooks","NotFound","App","setBooks","useEffect","getBooks","handleMove","oldShelf","concat","bk","exact","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.80937a42.chunk.js","sourcesContent":["const api = \"https://reactnd-books-api.udacity.com\";\r\n\r\nlet token = localStorage.token;\r\n\r\nif (!token) token = localStorage.token = Math.random().toString(36).substr(-8);\r\n\r\nconst headers = {\r\n  Accept: \"application/json\",\r\n  Authorization: token,\r\n};\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then((res) => res.json())\r\n    .then((data) => data.book);\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then((res) => res.json())\r\n    .then((data) => data.books);\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      ...headers,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ shelf }),\r\n  }).then((res) => res.json());\r\n\r\nexport const search = (query, maxResults) =>\r\n  fetch(`${api}/search`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      ...headers,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ query, maxResults }),\r\n  })\r\n    .then((res) => res.json())\r\n    .then((data) => data.books);\r\n","const Book = ({ book, onMove }) => {\r\n  // handle move when a new shelf is selected\r\n  const handleChange = (event) => {\r\n    onMove(book, event.target.value, book.shelf);\r\n  };\r\n  return (\r\n    <li>\r\n      <div className=\"book\">\r\n        <div className=\"book-top\">\r\n          {book.imageLinks ? (\r\n            <div\r\n              className=\"book-cover\"\r\n              style={{\r\n                width: 128,\r\n                height: 193,\r\n                backgroundImage: `url(${book.imageLinks.thumbnail})`,\r\n              }}\r\n            ></div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <div className=\"book-shelf-changer\">\r\n            <select defaultValue={book.shelf} onChange={handleChange}>\r\n              <option value=\"none\" disabled>\r\n                Move to...\r\n              </option>\r\n              <option value=\"currentlyReading\">Currently Reading</option>\r\n              <option value=\"wantToRead\">Want to Read</option>\r\n              <option value=\"read\">Read</option>\r\n              <option value=\"none\">None</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        {book.title ? <div className=\"book-title\">{book.title}</div> : \"\"}\r\n        {/* handling authors if more than one */}\r\n        {book.authors\r\n          ? book.authors.map((author) => {\r\n              return (\r\n                <div key={author} className=\"book-authors\">\r\n                  {author}\r\n                </div>\r\n              );\r\n            })\r\n          : \"\"}\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Book;\r\n","import { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as BooksAPI from \"../utils/BooksAPI\";\r\nimport Book from \"./Book\";\r\n\r\nconst SearchBooks = ({ books, onMove }) => {\r\n  // define variables using useState hook\r\n  const [query, setQuery] = useState(\"\");\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const showingResults = query === \"\" ? [] : searchResults;\r\n\r\n  const searchQuery = async (e) => {\r\n    if (e.target.value === \"\") {\r\n      setQuery(\"\");\r\n    }\r\n    // search if there is a query\r\n    else {\r\n      setQuery(e.target.value);\r\n      try {\r\n        const res = await BooksAPI.search(e.target.value, 20);\r\n        console.log(res);\r\n        if (res && !res.error) {\r\n          res.forEach((searchResult) => {\r\n            // setting all default shelves to \"none\"\r\n            searchResult.shelf = \"none\";\r\n            books.forEach((shelfBook) => {\r\n              // changing shelves of the books that are already in the collection\r\n              if (searchResult.id === shelfBook.id) {\r\n                searchResult.shelf = shelfBook.shelf;\r\n              }\r\n            });\r\n          });\r\n          setSearchResults(res);\r\n        } else {\r\n          setSearchResults([]);\r\n        }\r\n      } catch (err) {\r\n        setSearchResults([]);\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"search-books\">\r\n      <div className=\"search-books-bar\">\r\n        <Link to=\"/\" className=\"close-search\">\r\n          Close\r\n        </Link>\r\n        <div className=\"search-books-input-wrapper\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search by title, author, or ISBN\"\r\n            onChange={searchQuery}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"search-books-results\">\r\n        <ol className=\"books-grid\">\r\n          {showingResults.map((book) => {\r\n            return <Book key={book.id} book={book} onMove={onMove} />;\r\n          })}\r\n        </ol>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBooks;\r\n","import Book from \"./Book\";\r\n\r\nconst Shelf = ({ books, name, onMove }) => {\r\n  return (\r\n    <div>\r\n      <h2 className=\"bookshelf-title\">{name}</h2>\r\n      <div className=\"bookshelf-books\">\r\n        <ol className=\"books-grid\">\r\n          {books.map((book) => {\r\n            return <Book key={book.id} book={book} onMove={onMove} />;\r\n          })}\r\n        </ol>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Shelf;\r\n","import Shelf from \"./Shelf\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Shelves = ({ books, onMove }) => {\r\n  // separate out currently reading books\r\n  const currentlyReadingBooks = books.filter((book) => {\r\n    return book.shelf === \"currentlyReading\";\r\n  });\r\n\r\n  // separate out want to read books\r\n  const wantToReadBooks = books.filter((book) => {\r\n    return book.shelf === \"wantToRead\";\r\n  });\r\n\r\n  // separate out read books\r\n  const readBooks = books.filter((book) => {\r\n    return book.shelf === \"read\";\r\n  });\r\n  return (\r\n    <div className=\"list-books\">\r\n      <div className=\"list-books-title\">\r\n        <h1>MyReads</h1>\r\n      </div>\r\n      <div className=\"list-books-content\">\r\n        <div>\r\n          <div className=\"bookshelf\">\r\n            <Shelf\r\n              books={currentlyReadingBooks}\r\n              name=\"Currently Reading\"\r\n              onMove={onMove}\r\n            />\r\n            <Shelf\r\n              books={wantToReadBooks}\r\n              name=\"Want to Read\"\r\n              onMove={onMove}\r\n            />\r\n            <Shelf books={readBooks} name=\"Read\" onMove={onMove} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"open-search\">\r\n        <Link to=\"/search\">Add a book</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Shelves;\r\n","import { Link } from \"react-router-dom\";\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div>\r\n      <Link to=\"/\">Go back to home</Link>\r\n      <h3>Oops! Looks like the page doesn't exist.</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import \"../css/App.css\";\r\nimport SearchBooks from \"./SearchBooks\";\r\nimport Shelves from \"./Shelves\";\r\nimport { Route, Routes } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport * as BooksAPI from \"../utils/BooksAPI\";\r\nimport NotFound from \"./NotFound\";\r\n\r\nfunction App() {\r\n  // define books using useState hook\r\n  const [books, setBooks] = useState([]);\r\n\r\n  // get books using useEffect hook\r\n  useEffect(() => {\r\n    const getBooks = async () => {\r\n      const res = await BooksAPI.getAll();\r\n      setBooks(res);\r\n    };\r\n    getBooks();\r\n  }, []);\r\n\r\n  // handle move between shelves\r\n  const handleMove = async (book, shelf, oldShelf) => {\r\n    // add a new book to the collection\r\n    if (oldShelf === \"none\") {\r\n      book.shelf = shelf;\r\n      setBooks(books.concat(book));\r\n      BooksAPI.update(book, shelf);\r\n    }\r\n    // move a book which is already in the collecton\r\n    else {\r\n      BooksAPI.update(book, shelf);\r\n      setBooks(\r\n        books.map((bk) => {\r\n          if (bk.id === book.id) {\r\n            bk.shelf = shelf;\r\n          }\r\n          return bk;\r\n        })\r\n      );\r\n    }\r\n  };\r\n  return (\r\n    <Routes>\r\n      <Route\r\n        exact\r\n        path=\"/\"\r\n        element={<Shelves books={books} onMove={handleMove} />}\r\n      />\r\n      <Route\r\n        path=\"/search\"\r\n        element={<SearchBooks books={books} onMove={handleMove} />}\r\n      />\r\n      <Route path=\"*\" element={<NotFound />} />\r\n    </Routes>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./css/index.css\";\r\nimport App from \"./components/App\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}